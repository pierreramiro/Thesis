clear;close all; clc
%Characteristic of LIDAR:
    %Angle elevation range: [-16.677;16,545]
        %Here we have 16 laser/points
        %Also, every azimuth block has an angle offset. In this case, this always
        %going to be -1.24°
        %AZBLK=[15.379 13.236 11.128 9.03 6.941 4.878 2.788 0.705 -1.454 -3.448 -5.518 -7.601 -9.697 -11.789 -13.914 -16.062]
    
    %In mode 1023 azimuth. It increments 88 ticks at the encoder count. 
        %Encoder count comes from 0 to 90111
        %1 tick = 360/90112= 0.003995°.     Aprox -> 4°
        %88 tick = 360*88/90112 = 0.3516°
    
    %In total, we obtain 1024*16 = 16384 points in every LIDAR scan
    
AZBLK=[15.379 13.236 11.128 9.03 6.941 4.878 2.788 0.705 -1.454 -3.448 -5.518 -7.601 -9.697 -11.789 -13.914 -16.062];
azimuth_offset=-1.24;    

%We need to set the eq of a line generated by the laser beam from LIDAR, 
%using AZBLK and azimuth_offset. 
    %temp=(act_tick/90112-azimuth_offset/360)*2*pi);
    %xL=sin(temp);
    %yL=sin(AZBLK(i)*2*pi/360);
    %zL=-cos(temp);
n_AZBLK=64;
xL=zeros(n_AZBLK*length(AZBLK),1);
yL=xL;
zL=yL;
tick_count=90112/n_AZBLK;
for act_tick=0:tick_count:90111
    for i=1:length(AZBLK)
        index=act_tick/tick_count*(length(AZBLK))+i;
        temp=(act_tick/90112+azimuth_offset/360)*2*pi;
        xL(index)=sin(temp);
        yL(index)=sin(AZBLK(i)*2*pi/360);
        zL(index)=-cos(temp);
    end
end
%scatter3(xL,yL,zL);
%Note: non-zero elements in each vector-direction


%Interception with synthetic spheric room
    %eq for a 3D line: [x y z]= t(xL,yL,zL)
    %sphere of radius equal to 1: x^2+y^2+z^2=1^2
    %Eq to solve: (t*xL)^2 + (t*yL)^2 + (t*zL)^2 = 1;
syms t
n_rotation=6;
x=zeros(n_AZBLK*length(AZBLK),n_rotation);
y=x;
z=y;

%Rotation -> 31°
rot_angle=31*pi/180;
rot_matrix=[cos(rot_angle) -sin(rot_angle)  0;
            sin(rot_angle) cos(rot_angle)   0;
            0               0               1];

for i=1:length(x)
    eqn=(t*xL(i))^2 + (t*yL(i))^2 + (t*zL(i))^2 == 4;%we can reduce by half the result using 
                                                     %the two solutions of
                                                     %the equation
    temp_t=eval(solve(eqn,t));
    temp_t=temp_t(temp_t>=0);
    x(i,1)=temp_t*xL(i);
    y(i,1)=temp_t*yL(i);
    z(i,1)=temp_t*zL(i);
    
    for j=2:n_rotation
        temp_xyz=rot_matrix^(j-1)*[xL(i);yL(i);zL(i)];
        eqn=(t*temp_xyz(1))^2 + (t*temp_xyz(2))^2 + (t*temp_xyz(3))^2 == 4;
        temp_t=eval(solve(eqn,t));
        temp_t=temp_t(temp_t>=0);
        x(i,j)=temp_t*temp_xyz(1);
        y(i,j)=temp_t*temp_xyz(2);
        z(i,j)=temp_t*temp_xyz(3);
    end
end
figure
hold
for i=1:n_rotation
    scatter3(x(:,i),y(:,i),z(:,i))
end